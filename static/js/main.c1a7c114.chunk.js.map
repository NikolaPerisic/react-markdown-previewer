{"version":3,"sources":["GlobalCSS/main.module.css","components/Header/Header.js","components/Editor/Editor.js","components/Preview/Preview.js","components/Footer/Footer.js","Aux/Aux.js","assets/markup/markup.js","containers/MarkdownPreviewer.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["module","exports","logo","App-logo-spin","header","header_link","Wrapper","Editor_textarea","PreviewBox","Output","Footer","props","react_default","a","createElement","className","classes","src","alt","title","href","target","rel","editor","type","id","defaultValue","text","onChange","editText","preview","react_markdown_default","source","outputMarkup","footer","aux","children","markup","MarkdownPreviewer","state","headerText","Markup","markupEditHandler","el","markupText","value","_this","setState","Aux","Header","this","Editor","Preview","Component","App","containers_MarkdownPreviewer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","__webpack_require__","p"],"mappings":"2EACAA,EAAAC,QAAA,CAAkBC,KAAA,mBAAAC,gBAAA,4BAAAC,OAAA,qBAAAC,YAAA,0BAAAC,QAAA,sBAAAC,gBAAA,8BAAAC,WAAA,yBAAAC,OAAA,qBAAAC,OAAA,kLCoBHN,EAjBA,SAAAO,GACX,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAQZ,QACvBQ,EAAAC,EAAAC,cAAA,OAAKG,IAAKf,IAAMa,UAAWC,IAAQd,KAAMgB,IAAI,SAC7CN,EAAAC,EAAAC,cAAA,SAAIH,EAAMQ,OACVP,EAAAC,EAAAC,cAAA,KACIC,UAAWC,IAAQX,YACnBe,KAAK,yDACLC,OAAO,SACPC,IAAI,uBAJR,0BCQGC,EAdA,SAAAZ,GACX,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YACIU,KAAK,OACLC,GAAG,SACHV,UAAWC,IAAQT,gBACnBmB,aAAcf,EAAMgB,KACpBC,SAAUjB,EAAMkB,8BCKjBC,EAZC,SAAAnB,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQR,YACpBI,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CACIY,GAAG,UACHO,OAAQrB,EAAMsB,aACdlB,UAAWC,IAAQP,WCCpByB,EARA,WACX,OACItB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQN,QACpBE,EAAAC,EAAAC,cAAA,8BCJGqB,EAFH,SAAAxB,GAAK,OAAIA,EAAMyB,UC0BZC,EA1BH,igBCoCGC,6MA1BXC,MAAQ,CACJC,WAAY,2BACZH,OAAQI,KAEZC,kBAAoB,SAAAC,GAChB,IAAMC,EAAaD,EAAGtB,OAAOwB,MAE7B,OADAC,EAAKC,SAAS,CAAEV,OAAQO,IACjBA,2EAGP,OACIhC,EAAAC,EAAAC,cAACkC,EAAD,KACIpC,EAAAC,EAAAC,cAACmC,EAAD,CAAQ9B,MAAO+B,KAAKX,MAAMC,aAC1B5B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQV,SACpBM,EAAAC,EAAAC,cAACqC,EAAD,CACIxB,KAAMuB,KAAKX,MAAMF,OACjBR,SAAUqB,KAAKR,oBAEnB9B,EAAAC,EAAAC,cAACsC,EAAD,CAASnB,aAAciB,KAAKX,MAAMF,UAEtCzB,EAAAC,EAAAC,cAACJ,EAAD,cArBgB2C,aCAjBC,mLAJP,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,aAFGF,aCSEG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEnInBvE,EAAAC,QAAiBuE,EAAAC,EAAuB","file":"static/js/main.c1a7c114.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"main_logo__33L4x\",\"App-logo-spin\":\"main_App-logo-spin__1z6id\",\"header\":\"main_header__1I7sz\",\"header_link\":\"main_header_link__3vRgh\",\"Wrapper\":\"main_Wrapper__M-V5v\",\"Editor_textarea\":\"main_Editor_textarea__dgVOb\",\"PreviewBox\":\"main_PreviewBox__2oK1z\",\"Output\":\"main_Output__3iAHL\",\"Footer\":\"main_Footer__1E2F1\"};","import React from \"react\";\nimport logo from \"../../logo.svg\";\nimport classes from \"../../GlobalCSS//main.module.css\";\n\nconst header = props => {\n    return (\n        <header className={classes.header}>\n            <img src={logo} className={classes.logo} alt=\"logo\" />\n            <p>{props.title}</p>\n            <a\n                className={classes.header_link}\n                href=\"https://guides.github.com/features/mastering-markdown/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                Github markdown spec\n            </a>\n        </header>\n    );\n};\n\nexport default header;\n","import React from \"react\";\nimport classes from \"../../GlobalCSS/main.module.css\";\n\nconst editor = props => {\n    return (\n        <div>\n            <textarea\n                type=\"text\"\n                id=\"editor\"\n                className={classes.Editor_textarea}\n                defaultValue={props.text}\n                onChange={props.editText}\n            />\n        </div>\n    );\n};\n\nexport default editor;\n","import React from \"react\";\nimport classes from \"../../GlobalCSS/main.module.css\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst preview = props => {\n    return (\n        <div className={classes.PreviewBox}>\n            <ReactMarkdown\n                id=\"preview\"\n                source={props.outputMarkup}\n                className={classes.Output}\n            />\n        </div>\n    );\n};\n\nexport default preview;\n","import React from \"react\";\nimport classes from \"../../GlobalCSS/main.module.css\";\n\nconst footer = () => {\n    return (\n        <div className={classes.Footer}>\n            <p>by NP &copy; 2019</p>\n        </div>\n    );\n};\n\nexport default footer;\n","const aux = props => props.children;\n\nexport default aux;\n","const markup = `# H1\n## H2\nHorizontal line :\n- - - -\n[I'm an inline-style link](https://www.google.com)\n\nInline \\`code\\` has \\`back-ticks around\\` it.\n\n\\`\\`\\`javascript\nvar s = \"JavaScript syntax highlighting\";\nalert(s);\n\\`\\`\\`\n> Blockquote\n>> Nested Blockquote\n\nImage with alt :\n\n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 1\")\n\n__Strong text__ or **Strong text**\n\n* Bullet list\n  * Nested bullet\n    * Sub-nested bullet etc\n* Bullet list item 2`;\n\nexport default markup;\n","import React, { Component } from \"react\";\nimport classes from \"../GlobalCSS/main.module.css\";\nimport Header from \"../components/Header/Header\";\nimport Editor from \"../components/Editor/Editor\";\nimport Preview from \"../components/Preview/Preview\";\nimport Footer from \"../components/Footer/Footer\";\nimport Aux from \"../Aux/Aux\";\nimport Markup from \"../assets/markup/markup\";\n\nclass MarkdownPreviewer extends Component {\n    state = {\n        headerText: \"React Markdown Previewer\",\n        markup: Markup\n    };\n    markupEditHandler = el => {\n        const markupText = el.target.value;\n        this.setState({ markup: markupText });\n        return markupText;\n    };\n    render() {\n        return (\n            <Aux>\n                <Header title={this.state.headerText} />\n                <div className={classes.Wrapper}>\n                    <Editor\n                        text={this.state.markup}\n                        editText={this.markupEditHandler}\n                    />\n                    <Preview outputMarkup={this.state.markup} />\n                </div>\n                <Footer />\n            </Aux>\n        );\n    }\n}\n\nexport default MarkdownPreviewer;\n","import React, { Component } from \"react\";\nimport MarkdownPreviewer from \"./containers/MarkdownPreviewer\";\n\nclass App extends Component {\n    render() {\n        return <MarkdownPreviewer />;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}